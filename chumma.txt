- (model) jupyter notebook, 97% accuracy, train it and upload to google cloud platform.
- captures images serve as visual inspection data, which is part of food safety chain, model's accuracy increases app's utility beyond just disease detection, potentially warning about other risks in the crop cycle
- By predicting diseases early and offering treatment recommendations (like for blight), your app helps reduce waste in crop production and improves yield quality. This directly supports the idea of sustainable practices and contamination detection using predictive models​
- The backend you plan to set up using FastAPI and TF Serving allows for scalable, automated processing of these disease reports. You can extend this concept to also audit and report on food safety standards for crops, giving real-time insights to farmers on potential risks
- For including other plant leaves, you can expand the CNN model to classify multiple types of diseases across different crops. This will help in scalability and address the multi-plant aspect you mentioned. Integrating real-time data collection via React Native would allow farmers to capture images and get results instantly, fitting with the document’s focus on automating food safety processes​.
- To further connect with food safety automation, you can add a feature for compliance monitoring that alerts farmers if they are at risk of non-compliance with certain agricultural standards.
